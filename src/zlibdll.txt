diff -c ./ChangeLog ../zlib_bcc/ChangeLog
*** ./ChangeLog	Wed Jul 24 15:55:10 1996
--- ../zlib_bcc/ChangeLog	Sun Nov 24 22:05:56 1996
***************
*** 1,6 ****
--- 1,14 ----
  
  		ChangeLog file for zlib
  
+ Changes in 1.0.X (24 Nov 96)
+ - Add EXPORT to a number of functions to match prototypes.
+ - Add Win32 DLL target for Borland C++ 4.5 (Makefile.bor, zconf.h, 
+   zlib32.def, zlib32.rc).
+   Renamed zlib.def to zlib32.def, zlib.rc to zlib32.rc
+ - Add Win16 DLL target (Makefile.bor, zlib16.def, zlib16.rc)
+ - Add OS/2  DLL target (Makefile.emx, zlib16.def, zlib16.rc)
+ 
  Changes in 1.0.4 (24 Jul 96)
  - In very rare conditions, deflate(s, Z_FINISH) could fail to produce an EOF
    bit, so the decompressor could decompress all the correct data but went
diff -c ./INDEX ../zlib_bcc/INDEX
*** ./INDEX	Tue Jul 09 11:27:08 1996
--- ../zlib_bcc/INDEX	Sun Nov 24 21:52:34 1996
***************
*** 3,9 ****
  Make_vms.com	script for Vax/VMS
  Makefile	makefile for Unix (generated by configure)
  Makefile.b32	makefile for Borland C++   32-bit
! Makefile.bor	makefile for Borland C/C++ 16-bit
  Makefile.dj2	makefile for DJGPP 2.x
  Makefile.in	makefile for Unix (template for configure)
  Makefile.msc	makefile for Microsoft C 16-bit
--- 3,10 ----
  Make_vms.com	script for Vax/VMS
  Makefile	makefile for Unix (generated by configure)
  Makefile.b32	makefile for Borland C++   32-bit
! Makefile.bor	makefile for Borland C/C++ 16-bit, DLL 16 & 32-bit
! Makefile.emx	makefile for OS/2 EMX/GCC 32-bit and DLL
  Makefile.dj2	makefile for DJGPP 2.x
  Makefile.in	makefile for Unix (template for configure)
  Makefile.msc	makefile for Microsoft C 16-bit
***************
*** 15,22 ****
  algorithm.doc	description of the compression & decompression algorithms
  configure	configure script for Unix
  descrip.mms	makefile for Vax/VMS
! zlib.def        definition file for Windows DLL
! zlib.rc         definition file for Windows DLL
  
  
  		zlib public header files (must be kept):
--- 16,27 ----
  algorithm.doc	description of the compression & decompression algorithms
  configure	configure script for Unix
  descrip.mms	makefile for Vax/VMS
! zlib16.def      definition file for Windows DLL 16-bit
! zlib16.rc       definition file for Windows DLL 16-bit
! zlib32.def      definition file for Windows DLL 32-bit
! zlib32.rc       definition file for Windows DLL 32-bit
! zlib2.def       definition file for OS/2 DLL 32-bit
! zlib2.rc        definition file for OS/2 DLL 32-bit
  
  
  		zlib public header files (must be kept):
diff -c ./Makefile.bor ../zlib_bcc/Makefile.bor
*** ./Makefile.bor	Tue Jan 30 22:59:08 1996
--- ../zlib_bcc/Makefile.bor	Sun Nov 24 22:04:36 1996
***************
*** 1,5 ****
  # Makefile for zlib
! # Borland C++   ************ UNTESTED ***********
  
  # To use, do "make -fmakefile.bor"
  # To compile in small model, set below: MODEL=-ms
--- 1,6 ----
  # Makefile for zlib
! # Borland C++
! # tested with zlib 1.0.4, BC++ 4.5
  
  # To use, do "make -fmakefile.bor"
  # To compile in small model, set below: MODEL=-ms
***************
*** 13,25 ****
  # See zconf.h for details about the memory requirements.
  
  # ------------- Turbo C++, Borland C++ -------------
  MODEL=-ml
  CFLAGS=-O2 -Z $(MODEL)
  CC=bcc
  LD=bcc
  LIB=tlib
- #   replace bcc with tcc for Turbo C++ 1.0, with bcc32 for the 32 bit version
  LDFLAGS=$(MODEL)
  O=.obj
  
  # variables
--- 14,56 ----
  # See zconf.h for details about the memory requirements.
  
  # ------------- Turbo C++, Borland C++ -------------
+ #Default is 16-bit EXE (DLL=0, WIN32=0)
+ #DLL=1 for DLL
+ DLL=0
+ #WIN32=1 for Win32 platform
+ WIN32=0
+ 
+ #   replace bcc with tcc for Turbo C++ 1.0, with bcc32 for the 32 bit version
+ !if $(WIN32)
+ MODEL=
+ CFLAGS=-O2 -Z $(MODEL)
+ CC=bcc32
+ LD=bcc32
+ LIB=tlib
+ !else
  MODEL=-ml
  CFLAGS=-O2 -Z $(MODEL)
  CC=bcc
  LD=bcc
  LIB=tlib
  LDFLAGS=$(MODEL)
+ !endif
+ 
+ !if $(DLL)
+ CMAKEDLL=-WD -DZLIB_DLL -D_WINDOWS -DMAKE_DLL
+ INCLUDE=c:\bc45\include
+ CUSEDLL1=-DZLIB_DLL -D_WINDOWS
+ !if $(WIN32)
+ BITS=32
+ LDFLAGS=-WC $(CUSEDLL1)
+ CUSEDLL=-WC $(CUSEDLL1)
+ !else
+ BITS=16
+ LDFLAGS=-WE $(MODEL) $(CUSEDLL1)
+ CUSEDLL=-WE $(CUSEDLL1)
+ !endif
+ !endif
+ 
  O=.obj
  
  # variables
***************
*** 35,94 ****
  all: test
  
  adler32.obj: adler32.c zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  compress.obj: compress.c zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  crc32.obj: crc32.c zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  gzio.obj: gzio.c zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  infblock.obj: infblock.c zutil.h zlib.h zconf.h infblock.h inftrees.h\
     infcodes.h infutil.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  infcodes.obj: infcodes.c zutil.h zlib.h zconf.h inftrees.h infutil.h\
     infcodes.h inffast.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  inflate.obj: inflate.c zutil.h zlib.h zconf.h infblock.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  inftrees.obj: inftrees.c zutil.h zlib.h zconf.h inftrees.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  infutil.obj: infutil.c zutil.h zlib.h zconf.h inftrees.h infutil.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  inffast.obj: inffast.c zutil.h zlib.h zconf.h inftrees.h infutil.h inffast.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  trees.obj: trees.c deflate.h zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  uncompr.obj: uncompr.c zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  zutil.obj: zutil.c zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  example.obj: example.c zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  minigzip.obj: minigzip.c zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $*.c
  
  # we must cut the command line to fit in the MS/DOS 128 byte limit:
  zlib.lib: $(OBJ1) $(OBJ2)
  	del zlib.lib
  	$(LIB) zlib +$(OBJP1)
  	$(LIB) zlib +$(OBJP2)
  
  example.exe: example.obj zlib.lib
  	$(LD) $(LDFLAGS) example.obj zlib.lib
--- 66,156 ----
  all: test
  
  adler32.obj: adler32.c zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  compress.obj: compress.c zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  crc32.obj: crc32.c zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  gzio.obj: gzio.c zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  infblock.obj: infblock.c zutil.h zlib.h zconf.h infblock.h inftrees.h\
     infcodes.h infutil.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  infcodes.obj: infcodes.c zutil.h zlib.h zconf.h inftrees.h infutil.h\
     infcodes.h inffast.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  inflate.obj: inflate.c zutil.h zlib.h zconf.h infblock.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  inftrees.obj: inftrees.c zutil.h zlib.h zconf.h inftrees.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  infutil.obj: infutil.c zutil.h zlib.h zconf.h inftrees.h infutil.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  inffast.obj: inffast.c zutil.h zlib.h zconf.h inftrees.h infutil.h inffast.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  trees.obj: trees.c deflate.h zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  uncompr.obj: uncompr.c zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  zutil.obj: zutil.c zutil.h zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
  
  example.obj: example.c zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CUSEDLL) $*.c
  
  minigzip.obj: minigzip.c zlib.h zconf.h
! 	$(CC) -c $(CFLAGS) $(CUSEDLL) $*.c
  
+ zlib32.dll: $(OBJ1) $(OBJ2) zlib32.def zlib32.rc
+ 	$(CC) $(CFLAGS) $(CMAKEDLL) -ezlib32.dll @&&!
+ $(OBJ1)
+ $(OBJ2)
+ !
+ 	brcc32 -i$(INCLUDE) zlib32.rc zlib32.dll
+ 
+ zlib16.dll: $(OBJ1) $(OBJ2) zlib16.def zlib16.rc
+ 	$(CC) $(CFLAGS) $(CMAKEDLL) -ezlib16.dll @&&!
+ $(OBJ1)
+ $(OBJ2)
+ !
+ 	brcc -i$(INCLUDE) zlib16.rc zlib16.dll 
+ 
+ !if $(DLL)
+ !if $(WIN32)
+ # ----- WIN32 DLL -----
+ zlib.lib: zlib32.dll
+ 	implib zlib32.lib zlib32.dll
+ 	-del zlib.lib
+ 	copy zlib32.lib zlib.lib
+ !else
+ # ----- WIN16 DLL -----
+ zlib.lib: zlib16.dll
+ 	implib zlib16.lib zlib16.dll
+ 	-del zlib.lib
+ 	copy zlib16.lib zlib.lib
+ !endif
+ !else
+ # ----- Normal library -----
  # we must cut the command line to fit in the MS/DOS 128 byte limit:
  zlib.lib: $(OBJ1) $(OBJ2)
  	del zlib.lib
  	$(LIB) zlib +$(OBJP1)
  	$(LIB) zlib +$(OBJP2)
+ !endif
  
  example.exe: example.obj zlib.lib
  	$(LD) $(LDFLAGS) example.obj zlib.lib
***************
*** 98,105 ****
  
  test: example.exe minigzip.exe
  	example
  	echo hello world | minigzip | minigzip -d 
  
! #clean:
! #	del *.obj
! #	del *.exe
--- 160,173 ----
  
  test: example.exe minigzip.exe
  	example
+ !if !($(DLL) && !$(WIN32))
  	echo hello world | minigzip | minigzip -d 
+ !endif
  
! 	
! 	
! clean:
! 	del *.obj
! 	del *.exe
! 	del *.res
! 	del *.dll
diff -c ./Makefile.emx ../zlib_bcc/Makefile.emx
*** ./Makefile.emx	Sun Nov 24 22:02:26 1996
--- ../zlib_bcc/Makefile.emx	Sun Nov 24 22:04:12 1996
***************
*** 0 ****
--- 1,133 ----
+ # Makefile for zlib
+ # GCC/EMX 0.9b
+ 
+ # To use, do "nmake -f makefile.emx"
+ 
+ # ------------- GCC/EMX -------------
+ #Default is 32-bit EXE (DLL=0)
+ #DLL=1 for DLL
+ DLL=1
+ 
+ DRIVE=c:
+ COMP=gcc
+ COMPBASE=$(DRIVE)\emx
+ EMXPATH=$(DRIVE)/emx
+ INCLUDE=$(EMXPATH)/include
+ !if $(DLL)
+ CMAKEDLL=-Zdll -Zso -Zsys -DZLIB_DLL
+ CUSEDLL=-DZLIB_DLL
+ !else
+ #nothing yet
+ !endif
+ CFLAGS=-O -Wall -Zomf -Zmts -DOS2 $(CDEBUG)
+ LDFLAGS=-Zomf -Zmts
+ 
+ CC=$(COMPBASE)\bin\$(COMP) -I$(INCLUDE)
+ LD=$(CC)
+ LIB=$(COMPBASE)\bin\emxomfar rc
+ 
+ O=.obj
+ 
+ # variables
+ OBJ1 = adler32$(O) compress$(O) crc32$(O) gzio$(O) uncompr$(O) deflate$(O) \
+   trees$(O)
+ OBJP1 = adler32$(O)+compress$(O)+crc32$(O)+gzio$(O)+uncompr$(O)+deflate$(O)+\
+   trees$(O)
+ OBJ2 = zutil$(O) inflate$(O) infblock$(O) inftrees$(O) infcodes$(O) \
+   infutil$(O) inffast$(O)
+ OBJP2 = zutil$(O)+inflate$(O)+infblock$(O)+inftrees$(O)+infcodes$(O)+\
+   infutil$(O)+inffast$(O)
+ 
+ all: test
+ 
+ adler32.obj: adler32.c zutil.h zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ compress.obj: compress.c zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ crc32.obj: crc32.c zutil.h zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ gzio.obj: gzio.c zutil.h zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ infblock.obj: infblock.c zutil.h zlib.h zconf.h infblock.h inftrees.h\
+    infcodes.h infutil.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ infcodes.obj: infcodes.c zutil.h zlib.h zconf.h inftrees.h infutil.h\
+    infcodes.h inffast.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ inflate.obj: inflate.c zutil.h zlib.h zconf.h infblock.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ inftrees.obj: inftrees.c zutil.h zlib.h zconf.h inftrees.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ infutil.obj: infutil.c zutil.h zlib.h zconf.h inftrees.h infutil.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ inffast.obj: inffast.c zutil.h zlib.h zconf.h inftrees.h infutil.h inffast.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ trees.obj: trees.c deflate.h zutil.h zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ uncompr.obj: uncompr.c zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ zutil.obj: zutil.c zutil.h zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CMAKEDLL) $*.c
+ 
+ example.obj: example.c zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CUSEDLL) $*.c
+ 
+ minigzip.obj: minigzip.c zlib.h zconf.h
+ 	$(CC) -c $(CFLAGS) $(CUSEDLL) $*.c
+ 
+ zlib2.dll: $(OBJ1) $(OBJ2) zlib2.def zlib2.rc
+ 	$(CC) $(CFLAGS) $(CMAKEDLL) -o zlib2.dll $(OBJ1) $(OBJ2) zlib2.def
+ 	rc -i $(INCLUDE) zlib2.rc zlib2.dll
+ 
+ !if $(DLL)
+ # ----- DLL -----
+ zlib.lib: zlib2.dll
+ 	emximp -ozlib2.lib zlib2.def
+ 	-del zlib.lib
+ 	copy zlib2.lib zlib.lib
+ !else
+ # ----- Normal library -----
+ # we must cut the command line to fit in the MS/DOS 128 byte limit:
+ zlib.lib: $(OBJ1) $(OBJ2)
+ 	-del zlib.lib
+ #libz.a: $(OBJS)
+ 	$(LIB) $@ $(OBJ1) $(OBJ2)
+ #	$(LIB) zlib +$(OBJP1)
+ #	$(LIB) zlib +$(OBJP2)
+ !endif
+ 
+ example.exe: example.obj zlib.lib
+ 	$(LD) $(LDFLAGS) example.obj zlib.lib
+ 
+ minigzip.exe: minigzip.obj zlib.lib
+ 	$(LD) $(LDFLAGS) minigzip.obj zlib.lib
+ 
+ test: example.exe minigzip.exe
+ 	example
+ #	echo hello world | minigzip | minigzip -d 
+ #	OS/2 is not handling two pipes on one line
+ 	echo hello world | minigzip > test.gz
+ 	type test.gz | minigzip -d 
+ 	-del test.gz
+ 	
+ 	
+ clean:
+ 	-del *.obj
+ 	-del *.exe
+ 	-del *.res
+ 	-del *.dll
diff -c ./adler32.c ../zlib_bcc/adler32.c
*** ./adler32.c	Wed May 22 13:52:18 1996
--- ../zlib_bcc/adler32.c	Sat Nov 23 19:15:10 1996
***************
*** 18,24 ****
  #define DO16(buf)   DO8(buf,0); DO8(buf,8);
  
  /* ========================================================================= */
! uLong adler32(adler, buf, len)
      uLong adler;
      const Bytef *buf;
      uInt len;
--- 18,24 ----
  #define DO16(buf)   DO8(buf,0); DO8(buf,8);
  
  /* ========================================================================= */
! uLong EXPORT adler32(adler, buf, len)
      uLong adler;
      const Bytef *buf;
      uInt len;
diff -c ./compress.c ../zlib_bcc/compress.c
*** ./compress.c	Thu May 23 18:51:12 1996
--- ../zlib_bcc/compress.c	Sat Nov 23 19:15:24 1996
***************
*** 19,25 ****
     enough memory, Z_BUF_ERROR if there was not enough room in the output
     buffer.
  */
! int compress (dest, destLen, source, sourceLen)
      Bytef *dest;
      uLongf *destLen;
      const Bytef *source;
--- 19,25 ----
     enough memory, Z_BUF_ERROR if there was not enough room in the output
     buffer.
  */
! int EXPORT compress (dest, destLen, source, sourceLen)
      Bytef *dest;
      uLongf *destLen;
      const Bytef *source;
diff -c ./crc32.c ../zlib_bcc/crc32.c
*** ./crc32.c	Tue Jan 30 22:59:10 1996
--- ../zlib_bcc/crc32.c	Sat Nov 23 19:15:36 1996
***************
*** 139,145 ****
  #define DO8(buf)  DO4(buf); DO4(buf);
  
  /* ========================================================================= */
! uLong crc32(crc, buf, len)
      uLong crc;
      const Bytef *buf;
      uInt len;
--- 139,145 ----
  #define DO8(buf)  DO4(buf); DO4(buf);
  
  /* ========================================================================= */
! uLong EXPORT crc32(crc, buf, len)
      uLong crc;
      const Bytef *buf;
      uInt len;
diff -c ./deflate.c ../zlib_bcc/deflate.c
*** ./deflate.c	Wed Jul 24 15:40:58 1996
--- ../zlib_bcc/deflate.c	Sat Nov 23 19:19:00 1996
***************
*** 175,181 ****
      zmemzero((charf *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head));
  
  /* ========================================================================= */
! int deflateInit_(strm, level, version, stream_size)
      z_streamp strm;
      int level;
      const char *version;
--- 175,181 ----
      zmemzero((charf *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head));
  
  /* ========================================================================= */
! int EXPORT deflateInit_(strm, level, version, stream_size)
      z_streamp strm;
      int level;
      const char *version;
***************
*** 187,193 ****
  }
  
  /* ========================================================================= */
! int deflateInit2_(strm, level, method, windowBits, memLevel, strategy,
  		  version, stream_size)
      z_streamp strm;
      int  level;
--- 187,193 ----
  }
  
  /* ========================================================================= */
! int EXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,
  		  version, stream_size)
      z_streamp strm;
      int  level;
***************
*** 271,277 ****
  }
  
  /* ========================================================================= */
! int deflateSetDictionary (strm, dictionary, dictLength)
      z_streamp strm;
      const Bytef *dictionary;
      uInt  dictLength;
--- 271,277 ----
  }
  
  /* ========================================================================= */
! int EXPORT deflateSetDictionary (strm, dictionary, dictLength)
      z_streamp strm;
      const Bytef *dictionary;
      uInt  dictLength;
***************
*** 310,316 ****
  }
  
  /* ========================================================================= */
! int deflateReset (strm)
      z_streamp strm;
  {
      deflate_state *s;
--- 310,316 ----
  }
  
  /* ========================================================================= */
! int EXPORT deflateReset (strm)
      z_streamp strm;
  {
      deflate_state *s;
***************
*** 340,346 ****
  }
  
  /* ========================================================================= */
! int deflateParams(strm, level, strategy)
      z_streamp strm;
      int level;
      int strategy;
--- 340,346 ----
  }
  
  /* ========================================================================= */
! int EXPORT deflateParams(strm, level, strategy)
      z_streamp strm;
      int level;
      int strategy;
***************
*** 414,420 ****
  }
  
  /* ========================================================================= */
! int deflate (strm, flush)
      z_streamp strm;
      int flush;
  {
--- 414,420 ----
  }
  
  /* ========================================================================= */
! int EXPORT deflate (strm, flush)
      z_streamp strm;
      int flush;
  {
***************
*** 548,554 ****
  }
  
  /* ========================================================================= */
! int deflateEnd (strm)
      z_streamp strm;
  {
      int status;
--- 548,554 ----
  }
  
  /* ========================================================================= */
! int EXPORT deflateEnd (strm)
      z_streamp strm;
  {
      int status;
***************
*** 569,575 ****
  }
  
  /* ========================================================================= */
! int deflateCopy (dest, source)
      z_streamp dest;
      z_streamp source;
  {
--- 569,575 ----
  }
  
  /* ========================================================================= */
! int EXPORT deflateCopy (dest, source)
      z_streamp dest;
      z_streamp source;
  {
diff -c ./gzio.c ../zlib_bcc/gzio.c
*** ./gzio.c	Wed Jul 24 15:41:02 1996
--- ../zlib_bcc/gzio.c	Sat Nov 23 19:16:48 1996
***************
*** 145,151 ****
  /* ===========================================================================
       Opens a gzip (.gz) file for reading or writing.
  */
! gzFile gzopen (path, mode)
      const char *path;
      const char *mode;
  {
--- 145,151 ----
  /* ===========================================================================
       Opens a gzip (.gz) file for reading or writing.
  */
! gzFile EXPORT gzopen (path, mode)
      const char *path;
      const char *mode;
  {
***************
*** 156,162 ****
       Associate a gzFile with the file descriptor fd. fd is not dup'ed here
     to mimic the behavio(u)r of fdopen.
  */
! gzFile gzdopen (fd, mode)
      int fd;
      const char *mode;
  {
--- 156,162 ----
       Associate a gzFile with the file descriptor fd. fd is not dup'ed here
     to mimic the behavio(u)r of fdopen.
  */
! gzFile EXPORT gzdopen (fd, mode)
      int fd;
      const char *mode;
  {
***************
*** 282,288 ****
       Reads the given number of uncompressed bytes from the compressed file.
     gzread returns the number of bytes actually read (0 for end of file).
  */
! int gzread (file, buf, len)
      gzFile file;
      voidp buf;
      unsigned len;
--- 282,288 ----
       Reads the given number of uncompressed bytes from the compressed file.
     gzread returns the number of bytes actually read (0 for end of file).
  */
! int EXPORT gzread (file, buf, len)
      gzFile file;
      voidp buf;
      unsigned len;
***************
*** 361,367 ****
       Writes the given number of uncompressed bytes into the compressed file.
     gzwrite returns the number of bytes actually written (0 in case of error).
  */
! int gzwrite (file, buf, len)
      gzFile file;
      const voidp buf;
      unsigned len;
--- 361,367 ----
       Writes the given number of uncompressed bytes into the compressed file.
     gzwrite returns the number of bytes actually written (0 in case of error).
  */
! int EXPORT gzwrite (file, buf, len)
      gzFile file;
      const voidp buf;
      unsigned len;
***************
*** 398,404 ****
       gzflush should be called only when strictly necessary because it can
     degrade compression.
  */
! int gzflush (file, flush)
      gzFile file;
      int flush;
  {
--- 398,404 ----
       gzflush should be called only when strictly necessary because it can
     degrade compression.
  */
! int EXPORT gzflush (file, flush)
      gzFile file;
      int flush;
  {
***************
*** 470,476 ****
       Flushes all pending output if necessary, closes the compressed file
     and deallocates all the (de)compression state.
  */
! int gzclose (file)
      gzFile file;
  {
      int err;
--- 470,476 ----
       Flushes all pending output if necessary, closes the compressed file
     and deallocates all the (de)compression state.
  */
! int EXPORT gzclose (file)
      gzFile file;
  {
      int err;
***************
*** 496,502 ****
     errnum is set to Z_ERRNO and the application may consult errno
     to get the exact error code.
  */
! const char*  gzerror (file, errnum)
      gzFile file;
      int *errnum;
  {
--- 496,502 ----
     errnum is set to Z_ERRNO and the application may consult errno
     to get the exact error code.
  */
! const char*  EXPORT gzerror (file, errnum)
      gzFile file;
      int *errnum;
  {
diff -c ./inflate.c ../zlib_bcc/inflate.c
*** ./inflate.c	Fri Jun 28 16:06:32 1996
--- ../zlib_bcc/inflate.c	Sun Nov 24 21:53:14 1996
***************
*** 48,54 ****
  };
  
  
! int inflateReset(z)
  z_streamp z;
  {
    uLong c;
--- 48,54 ----
  };
  
  
! int EXPORT inflateReset(z)
  z_streamp z;
  {
    uLong c;
***************
*** 64,70 ****
  }
  
  
! int inflateEnd(z)
  z_streamp z;
  {
    uLong c;
--- 64,70 ----
  }
  
  
! int EXPORT inflateEnd(z)
  z_streamp z;
  {
    uLong c;
***************
*** 80,86 ****
  }
  
  
! int inflateInit2_(z, w, version, stream_size)
  z_streamp z;
  int w;
  const char *version;
--- 80,86 ----
  }
  
  
! int EXPORT inflateInit2_(z, w, version, stream_size)
  z_streamp z;
  int w;
  const char *version;
***************
*** 137,143 ****
  }
  
  
! int inflateInit_(z, version, stream_size)
  z_streamp z;
  const char *version;
  int stream_size;
--- 137,143 ----
  }
  
  
! int EXPORT inflateInit_(z, version, stream_size)
  z_streamp z;
  const char *version;
  int stream_size;
***************
*** 149,155 ****
  #define NEEDBYTE {if(z->avail_in==0)return r;r=Z_OK;}
  #define NEXTBYTE (z->avail_in--,z->total_in++,*z->next_in++)
  
! int inflate(z, f)
  z_streamp z;
  int f;
  {
--- 149,155 ----
  #define NEEDBYTE {if(z->avail_in==0)return r;r=Z_OK;}
  #define NEXTBYTE (z->avail_in--,z->total_in++,*z->next_in++)
  
! int EXPORT inflate(z, f)
  z_streamp z;
  int f;
  {
***************
*** 271,277 ****
  }
  
  
! int inflateSetDictionary(z, dictionary, dictLength)
  z_streamp z;
  const Bytef *dictionary;
  uInt  dictLength;
--- 271,277 ----
  }
  
  
! int EXPORT inflateSetDictionary(z, dictionary, dictLength)
  z_streamp z;
  const Bytef *dictionary;
  uInt  dictLength;
***************
*** 295,301 ****
  }
  
  
! int inflateSync(z)
  z_streamp z;
  {
    uInt n;       /* number of bytes to look at */
--- 295,301 ----
  }
  
  
! int EXPORT inflateSync(z)
  z_streamp z;
  {
    uInt n;       /* number of bytes to look at */
Only in ../zlib_bcc: makefile.unx
diff -c ./uncompr.c ../zlib_bcc/uncompr.c
*** ./uncompr.c	Tue Jan 30 22:59:26 1996
--- ../zlib_bcc/uncompr.c	Sat Nov 23 19:17:04 1996
***************
*** 22,28 ****
     enough memory, Z_BUF_ERROR if there was not enough room in the output
     buffer, or Z_DATA_ERROR if the input data was corrupted.
  */
! int uncompress (dest, destLen, source, sourceLen)
      Bytef *dest;
      uLongf *destLen;
      const Bytef *source;
--- 22,28 ----
     enough memory, Z_BUF_ERROR if there was not enough room in the output
     buffer, or Z_DATA_ERROR if the input data was corrupted.
  */
! int EXPORT uncompress (dest, destLen, source, sourceLen)
      Bytef *dest;
      uLongf *destLen;
      const Bytef *source;
diff -c ./zconf.h ../zlib_bcc/zconf.h
*** ./zconf.h	Tue Jul 02 17:09:28 1996
--- ../zlib_bcc/zconf.h	Sun Nov 24 09:40:04 1996
***************
*** 175,182 ****
--- 175,192 ----
  
  /* Compile with -DZLIB_DLL for Windows DLL support */
  #if (defined(_WINDOWS) || defined(WINDOWS)) && defined(ZLIB_DLL)
+ #ifdef __BORLANDC__
+ #  undef FAR
  #  include <windows.h>
+ #  if defined(MAKE_DLL)
+ #    define EXPORT  WINAPI _export
+ #  else
+ #    define EXPORT  WINAPI
+ #  endif
+ #else
+ #  include <windows.h>
  #  define EXPORT  WINAPI
+ #endif
  #else
  #  define EXPORT
  #endif
diff -c ./zlib16.def ../zlib_bcc/zlib16.def
*** ./zlib16.def	Sun Nov 24 21:45:20 1996
--- ../zlib_bcc/zlib16.def	Sat Nov 23 19:10:40 1996
***************
*** 0 ****
--- 1,34 ----
+ LIBRARY		zlib16
+ DESCRIPTION	'zlib data compression library'
+ EXETYPE		WINDOWS
+ CODE		PRELOAD DISCARDABLE 
+ DATA		SINGLE SHARED
+ HEAPSIZE	4096
+ EXPORTS
+ 		zlibVersion
+ 		deflate
+ 		deflateEnd
+ 		inflate
+ 		inflateEnd
+ 		deflateSetDictionary
+ 		deflateCopy
+ 		deflateReset
+ 		deflateParams
+ 		inflateSetDictionary
+ 		inflateSync
+ 		inflateReset
+ 		compress
+ 		uncompress
+ 		gzopen
+ 		gzdopen
+ 		gzread
+ 		gzwrite
+ 		gzflush
+ 		gzclose
+ 		gzerror
+ 		adler32
+ 		crc32
+ 		deflateInit_
+ 		inflateInit_
+ 		deflateInit2_
+ 		inflateInit2_
diff -c ./zlib16.rc ../zlib_bcc/zlib16.rc
*** ./zlib16.rc	Sun Nov 24 21:48:00 1996
--- ../zlib_bcc/zlib16.rc	Sun Nov 24 13:54:58 1996
***************
*** 0 ****
--- 1,32 ----
+ #include <windows.h>
+ 
+ #define IDR_VERSION1  1
+ IDR_VERSION1	VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE
+   FILEVERSION	 1,0,4,0
+   PRODUCTVERSION 1,0,4,0
+   FILEFLAGSMASK	VS_FFI_FILEFLAGSMASK
+   FILEFLAGS	0
+   FILEOS	VOS_DOS_WINDOWS32
+   FILETYPE	VFT_DLL
+   FILESUBTYPE	0	// not used
+ BEGIN
+   BLOCK "StringFileInfo"
+   BEGIN
+     BLOCK "040904E4"
+     //language ID = U.S. English, char set = Windows, Multilingual
+ 
+     BEGIN
+       VALUE "FileDescription", "zlib data compression library\0"
+       VALUE "FileVersion",	"1.0.4\0"
+       VALUE "InternalName",	"zlib16\0"
+       VALUE "OriginalFilename",	"zlib16.lib\0"
+       VALUE "ProductName",	"ZLib16.DLL\0"
+       VALUE "Comments",	"DLL support by Alessandro Iacopetti\0"
+       VALUE "LegalCopyright", "(C) 1995-1996 Jean-loup Gailly & Mark Adler\0"
+     END
+   END
+   BLOCK "VarFileInfo"
+   BEGIN
+     VALUE "Translation", 0x0409, 1252
+   END
+ END
diff -c ./zlib2.def ../zlib_bcc/zlib2.def
*** ./zlib2.def	Sun Nov 24 21:48:46 1996
--- ../zlib_bcc/zlib2.def	Sun Nov 24 14:31:10 1996
***************
*** 0 ****
--- 1,31 ----
+ LIBRARY ZLIB2
+ DESCRIPTION	'zlib data compression library'
+ DATA MULTIPLE NONSHARED
+ EXPORTS
+ 		zlibVersion
+ 		deflate
+ 		deflateEnd
+ 		inflate
+ 		inflateEnd
+ 		deflateSetDictionary
+ 		deflateCopy
+ 		deflateReset
+ 		deflateParams
+ 		inflateSetDictionary
+ 		inflateSync
+ 		inflateReset
+ 		compress
+ 		uncompress
+ 		gzopen
+ 		gzdopen
+ 		gzread
+ 		gzwrite
+ 		gzflush
+ 		gzclose
+ 		gzerror
+ 		adler32
+ 		crc32
+ 		deflateInit_
+ 		inflateInit_
+ 		deflateInit2_
+ 		inflateInit2_
diff -c ./zlib2.rc ../zlib_bcc/zlib2.rc
*** ./zlib2.rc	Sun Nov 24 21:48:38 1996
--- ../zlib_bcc/zlib2.rc	Sun Nov 24 14:31:24 1996
***************
*** 0 ****
--- 1 ----
+ /* empty at the moment */
diff -c ./zlib32.def ../zlib_bcc/zlib32.def
*** ./zlib32.def	Sun Nov 24 21:47:48 1996
--- ../zlib_bcc/zlib32.def	Sat Nov 23 19:30:24 1996
***************
*** 0 ****
--- 1,38 ----
+ LIBRARY		zlib32
+ 
+ DESCRIPTION	'zlib data compression library'
+ 
+ CODE		PRELOAD DISCARDABLE 
+ 
+ DATA		MULTIPLE SHARED
+ 
+ HEAPSIZE	1048576,4096
+ 
+ EXPORTS
+ 		zlibVersion
+ 		deflate
+ 		deflateEnd
+ 		inflate
+ 		inflateEnd
+ 		deflateSetDictionary
+ 		deflateCopy
+ 		deflateReset
+ 		deflateParams
+ 		inflateSetDictionary
+ 		inflateSync
+ 		inflateReset
+ 		compress
+ 		uncompress
+ 		gzopen
+ 		gzdopen
+ 		gzread
+ 		gzwrite
+ 		gzflush
+ 		gzclose
+ 		gzerror
+ 		adler32
+ 		crc32
+ 		deflateInit_
+ 		inflateInit_
+ 		deflateInit2_
+ 		inflateInit2_
diff -c ./zlib32.rc ../zlib_bcc/zlib32.rc
*** ./zlib32.rc	Sun Nov 24 21:47:52 1996
--- ../zlib_bcc/zlib32.rc	Sun Nov 24 13:55:14 1996
***************
*** 0 ****
--- 1,32 ----
+ #include <windows.h>
+ 
+ #define IDR_VERSION1  1
+ IDR_VERSION1	VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE
+   FILEVERSION	 1,0,4,0
+   PRODUCTVERSION 1,0,4,0
+   FILEFLAGSMASK	VS_FFI_FILEFLAGSMASK
+   FILEFLAGS	0
+   FILEOS	VOS_DOS_WINDOWS32
+   FILETYPE	VFT_DLL
+   FILESUBTYPE	0	// not used
+ BEGIN
+   BLOCK "StringFileInfo"
+   BEGIN
+     BLOCK "040904E4"
+     //language ID = U.S. English, char set = Windows, Multilingual
+ 
+     BEGIN
+       VALUE "FileDescription", "zlib data compression library\0"
+       VALUE "FileVersion",	"1.0.4\0"
+       VALUE "InternalName",	"zlib32\0"
+       VALUE "OriginalFilename",	"zlib32.lib\0"
+       VALUE "ProductName",	"ZLib32.DLL\0"
+       VALUE "Comments",	"DLL support by Alessandro Iacopetti\0"
+       VALUE "LegalCopyright", "(C) 1995-1996 Jean-loup Gailly & Mark Adler\0"
+     END
+   END
+   BLOCK "VarFileInfo"
+   BEGIN
+     VALUE "Translation", 0x0409, 1252
+   END
+ END
diff -c ./zutil.c ../zlib_bcc/zutil.c
*** ./zutil.c	Wed Jul 24 15:41:12 1996
--- ../zlib_bcc/zutil.c	Sat Nov 23 19:19:32 1996
***************
*** 28,34 ****
  ""};
  
  
! const char *zlibVersion()
  {
      return ZLIB_VERSION;
  }
--- 28,34 ----
  ""};
  
  
! const char * EXPORT zlibVersion()
  {
      return ZLIB_VERSION;
  }
diff -c ./zutil.h ../zlib_bcc/zutil.h
*** ./zutil.h	Wed Jul 24 15:41:14 1996
--- ../zlib_bcc/zutil.h	Sun Nov 24 13:39:42 1996
***************
*** 190,196 ****
  #endif
  
  
! typedef uLong (*check_func) OF((uLong check, const Bytef *buf, uInt len));
  
  voidpf zcalloc OF((voidpf opaque, unsigned items, unsigned size));
  void   zcfree  OF((voidpf opaque, voidpf ptr));
--- 190,196 ----
  #endif
  
  
! typedef uLong EXPORT (*check_func) OF((uLong check, const Bytef *buf, uInt len));
  
  voidpf zcalloc OF((voidpf opaque, unsigned items, unsigned size));
  void   zcfree  OF((voidpf opaque, voidpf ptr));
